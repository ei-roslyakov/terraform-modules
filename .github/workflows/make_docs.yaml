name: Make docs

on:
  workflow_dispatch:
  push:
    branches:
      - "master"

env:
  TFD_VERSION : "v0.16.0"
  OUTPUT_MODE : "inject"
  OUTPUT_FILE : "README.md"


jobs:
  directories:
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.set-dirs.outputs.dir }}
    steps:
      - uses: actions/checkout@v2
      - id: set-dirs
        run: echo "::set-output name=dir::$(ls -d */ | jq -R -s -c 'split("\n")[:-1]')"

  make_readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
      
      - name: Render terraform docs inside the README.md and push changes back to PR branch
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: "true"
      
      - name: Install terraform docs
        uses: ./.github/actions/install-terraform-docs
        with:
          tfd_version: ${{ env.TFD_VERSION }}

      - name: Make docs
        run: |
          for item in *; do
            if [ -d "${item}" ]; then
              /usr/local/terraform-docs markdown table --output-file ${{ env.OUTPUT_FILE }} --output-mode ${{ env.OUTPUT_MODE }} "$item"
            fi
          done

      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if [ -n "$(git status --porcelain)" ]; then echo "true"; else echo "false"; fi)

      - name: Update changes in GitHub repository
        if: steps.git-check.outputs.modified == 'true'
        run:  |
          git config --global user.name 'Terraform Docs maker' 
          git config --global user.email 'noreply@amo.tech'
          git add -A
          git commit -m '[automated commit] add docs generated using terraform-docs'
          git push

      

